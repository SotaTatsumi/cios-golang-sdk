/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// SingleDeviceClientList struct for SingleDeviceClientList
type SingleDeviceClientList struct {
	ClientList *Client `json:"client_list,omitempty"`
}

// NewSingleDeviceClientList instantiates a new SingleDeviceClientList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleDeviceClientList() *SingleDeviceClientList {
	this := SingleDeviceClientList{}
	return &this
}

// NewSingleDeviceClientListWithDefaults instantiates a new SingleDeviceClientList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleDeviceClientListWithDefaults() *SingleDeviceClientList {
	this := SingleDeviceClientList{}
	return &this
}

// GetClientList returns the ClientList field value if set, zero value otherwise.
func (o *SingleDeviceClientList) GetClientList() Client {
	if o == nil || o.ClientList == nil {
		var ret Client
		return ret
	}
	return *o.ClientList
}

// GetClientListOk returns a tuple with the ClientList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleDeviceClientList) GetClientListOk() (*Client, bool) {
	if o == nil || o.ClientList == nil {
		return nil, false
	}
	return o.ClientList, true
}

// HasClientList returns a boolean if a field has been set.
func (o *SingleDeviceClientList) HasClientList() bool {
	if o != nil && o.ClientList != nil {
		return true
	}

	return false
}

// SetClientList gets a reference to the given Client and assigns it to the ClientList field.
func (o *SingleDeviceClientList) SetClientList(v Client) {
	o.ClientList = &v
}

func (o SingleDeviceClientList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientList != nil {
		toSerialize["client_list"] = o.ClientList
	}
	return json.Marshal(toSerialize)
}

type NullableSingleDeviceClientList struct {
	value *SingleDeviceClientList
	isSet bool
}

func (v NullableSingleDeviceClientList) Get() *SingleDeviceClientList {
	return v.value
}

func (v *NullableSingleDeviceClientList) Set(val *SingleDeviceClientList) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleDeviceClientList) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleDeviceClientList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleDeviceClientList(val *SingleDeviceClientList) *NullableSingleDeviceClientList {
	return &NullableSingleDeviceClientList{value: val, isSet: true}
}

func (v NullableSingleDeviceClientList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleDeviceClientList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


