/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceModel struct for DeviceModel
type DeviceModel struct {
	Id string `json:"id"`
	Name string `json:"name"`
	ResourceOwnerId string `json:"resource_owner_id"`
	MakerId NullableString `json:"maker_id,omitempty"`
	Version NullableString `json:"version,omitempty"`
	Watch NullableWatch `json:"watch,omitempty"`
	Components *ConstitutionComponent `json:"components,omitempty"`
	// ナノ秒
	CreatedAt string `json:"created_at"`
	// ナノ秒
	UpdatedAt string `json:"updated_at"`
}

// NewDeviceModel instantiates a new DeviceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceModel(id string, name string, resourceOwnerId string, createdAt string, updatedAt string, ) *DeviceModel {
	this := DeviceModel{}
	this.Id = id
	this.Name = name
	this.ResourceOwnerId = resourceOwnerId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewDeviceModelWithDefaults instantiates a new DeviceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceModelWithDefaults() *DeviceModel {
	this := DeviceModel{}
	return &this
}

// GetId returns the Id field value
func (o *DeviceModel) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeviceModel) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeviceModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DeviceModel) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DeviceModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DeviceModel) SetName(v string) {
	o.Name = v
}

// GetResourceOwnerId returns the ResourceOwnerId field value
func (o *DeviceModel) GetResourceOwnerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceOwnerId
}

// GetResourceOwnerIdOk returns a tuple with the ResourceOwnerId field value
// and a boolean to check if the value has been set.
func (o *DeviceModel) GetResourceOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceOwnerId, true
}

// SetResourceOwnerId sets field value
func (o *DeviceModel) SetResourceOwnerId(v string) {
	o.ResourceOwnerId = v
}

// GetMakerId returns the MakerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceModel) GetMakerId() string {
	if o == nil || o.MakerId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MakerId.Get()
}

// GetMakerIdOk returns a tuple with the MakerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceModel) GetMakerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MakerId.Get(), o.MakerId.IsSet()
}

// HasMakerId returns a boolean if a field has been set.
func (o *DeviceModel) HasMakerId() bool {
	if o != nil && o.MakerId.IsSet() {
		return true
	}

	return false
}

// SetMakerId gets a reference to the given NullableString and assigns it to the MakerId field.
func (o *DeviceModel) SetMakerId(v string) {
	o.MakerId.Set(&v)
}
// SetMakerIdNil sets the value for MakerId to be an explicit nil
func (o *DeviceModel) SetMakerIdNil() {
	o.MakerId.Set(nil)
}

// UnsetMakerId ensures that no value is present for MakerId, not even an explicit nil
func (o *DeviceModel) UnsetMakerId() {
	o.MakerId.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceModel) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceModel) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *DeviceModel) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *DeviceModel) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *DeviceModel) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *DeviceModel) UnsetVersion() {
	o.Version.Unset()
}

// GetWatch returns the Watch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceModel) GetWatch() Watch {
	if o == nil || o.Watch.Get() == nil {
		var ret Watch
		return ret
	}
	return *o.Watch.Get()
}

// GetWatchOk returns a tuple with the Watch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceModel) GetWatchOk() (*Watch, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Watch.Get(), o.Watch.IsSet()
}

// HasWatch returns a boolean if a field has been set.
func (o *DeviceModel) HasWatch() bool {
	if o != nil && o.Watch.IsSet() {
		return true
	}

	return false
}

// SetWatch gets a reference to the given NullableWatch and assigns it to the Watch field.
func (o *DeviceModel) SetWatch(v Watch) {
	o.Watch.Set(&v)
}
// SetWatchNil sets the value for Watch to be an explicit nil
func (o *DeviceModel) SetWatchNil() {
	o.Watch.Set(nil)
}

// UnsetWatch ensures that no value is present for Watch, not even an explicit nil
func (o *DeviceModel) UnsetWatch() {
	o.Watch.Unset()
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *DeviceModel) GetComponents() ConstitutionComponent {
	if o == nil || o.Components == nil {
		var ret ConstitutionComponent
		return ret
	}
	return *o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceModel) GetComponentsOk() (*ConstitutionComponent, bool) {
	if o == nil || o.Components == nil {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *DeviceModel) HasComponents() bool {
	if o != nil && o.Components != nil {
		return true
	}

	return false
}

// SetComponents gets a reference to the given ConstitutionComponent and assigns it to the Components field.
func (o *DeviceModel) SetComponents(v ConstitutionComponent) {
	o.Components = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DeviceModel) GetCreatedAt() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DeviceModel) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DeviceModel) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DeviceModel) GetUpdatedAt() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DeviceModel) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DeviceModel) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o DeviceModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["resource_owner_id"] = o.ResourceOwnerId
	}
	if o.MakerId.IsSet() {
		toSerialize["maker_id"] = o.MakerId.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.Watch.IsSet() {
		toSerialize["watch"] = o.Watch.Get()
	}
	if o.Components != nil {
		toSerialize["components"] = o.Components
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceModel struct {
	value *DeviceModel
	isSet bool
}

func (v NullableDeviceModel) Get() *DeviceModel {
	return v.value
}

func (v *NullableDeviceModel) Set(val *DeviceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceModel(val *DeviceModel) *NullableDeviceModel {
	return &NullableDeviceModel{value: val, isSet: true}
}

func (v NullableDeviceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


