/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceClientRsaKey struct for DeviceClientRsaKey
type DeviceClientRsaKey struct {
	ClientId string `json:"client_id"`
	RsaPublickey string `json:"rsa_publickey"`
}

// NewDeviceClientRsaKey instantiates a new DeviceClientRsaKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceClientRsaKey(clientId string, rsaPublickey string, ) *DeviceClientRsaKey {
	this := DeviceClientRsaKey{}
	this.ClientId = clientId
	this.RsaPublickey = rsaPublickey
	return &this
}

// NewDeviceClientRsaKeyWithDefaults instantiates a new DeviceClientRsaKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceClientRsaKeyWithDefaults() *DeviceClientRsaKey {
	this := DeviceClientRsaKey{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *DeviceClientRsaKey) GetClientId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *DeviceClientRsaKey) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *DeviceClientRsaKey) SetClientId(v string) {
	o.ClientId = v
}

// GetRsaPublickey returns the RsaPublickey field value
func (o *DeviceClientRsaKey) GetRsaPublickey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RsaPublickey
}

// GetRsaPublickeyOk returns a tuple with the RsaPublickey field value
// and a boolean to check if the value has been set.
func (o *DeviceClientRsaKey) GetRsaPublickeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RsaPublickey, true
}

// SetRsaPublickey sets field value
func (o *DeviceClientRsaKey) SetRsaPublickey(v string) {
	o.RsaPublickey = v
}

func (o DeviceClientRsaKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["rsa_publickey"] = o.RsaPublickey
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceClientRsaKey struct {
	value *DeviceClientRsaKey
	isSet bool
}

func (v NullableDeviceClientRsaKey) Get() *DeviceClientRsaKey {
	return v.value
}

func (v *NullableDeviceClientRsaKey) Set(val *DeviceClientRsaKey) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceClientRsaKey) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceClientRsaKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceClientRsaKey(val *DeviceClientRsaKey) *NullableDeviceClientRsaKey {
	return &NullableDeviceClientRsaKey{value: val, isSet: true}
}

func (v NullableDeviceClientRsaKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceClientRsaKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


