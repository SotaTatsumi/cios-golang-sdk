/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleChannel struct for MultipleChannel
type MultipleChannel struct {
	Total int64 `json:"total"`
	Channels []Channel `json:"channels"`
}

// NewMultipleChannel instantiates a new MultipleChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleChannel(total int64, channels []Channel, ) *MultipleChannel {
	this := MultipleChannel{}
	this.Total = total
	this.Channels = channels
	return &this
}

// NewMultipleChannelWithDefaults instantiates a new MultipleChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleChannelWithDefaults() *MultipleChannel {
	this := MultipleChannel{}
	return &this
}

// GetTotal returns the Total field value
func (o *MultipleChannel) GetTotal() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MultipleChannel) GetTotalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MultipleChannel) SetTotal(v int64) {
	o.Total = v
}

// GetChannels returns the Channels field value
func (o *MultipleChannel) GetChannels() []Channel {
	if o == nil  {
		var ret []Channel
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *MultipleChannel) GetChannelsOk() (*[]Channel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channels, true
}

// SetChannels sets field value
func (o *MultipleChannel) SetChannels(v []Channel) {
	o.Channels = v
}

func (o MultipleChannel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["channels"] = o.Channels
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleChannel struct {
	value *MultipleChannel
	isSet bool
}

func (v NullableMultipleChannel) Get() *MultipleChannel {
	return v.value
}

func (v *NullableMultipleChannel) Set(val *MultipleChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleChannel(val *MultipleChannel) *NullableMultipleChannel {
	return &NullableMultipleChannel{value: val, isSet: true}
}

func (v NullableMultipleChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


