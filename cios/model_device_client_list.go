/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceClientList struct for DeviceClientList
type DeviceClientList struct {
	ClientList *[]Client `json:"client_list,omitempty"`
}

// NewDeviceClientList instantiates a new DeviceClientList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceClientList() *DeviceClientList {
	this := DeviceClientList{}
	return &this
}

// NewDeviceClientListWithDefaults instantiates a new DeviceClientList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceClientListWithDefaults() *DeviceClientList {
	this := DeviceClientList{}
	return &this
}

// GetClientList returns the ClientList field value if set, zero value otherwise.
func (o *DeviceClientList) GetClientList() []Client {
	if o == nil || o.ClientList == nil {
		var ret []Client
		return ret
	}
	return *o.ClientList
}

// GetClientListOk returns a tuple with the ClientList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceClientList) GetClientListOk() (*[]Client, bool) {
	if o == nil || o.ClientList == nil {
		return nil, false
	}
	return o.ClientList, true
}

// HasClientList returns a boolean if a field has been set.
func (o *DeviceClientList) HasClientList() bool {
	if o != nil && o.ClientList != nil {
		return true
	}

	return false
}

// SetClientList gets a reference to the given []Client and assigns it to the ClientList field.
func (o *DeviceClientList) SetClientList(v []Client) {
	o.ClientList = &v
}

func (o DeviceClientList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientList != nil {
		toSerialize["client_list"] = o.ClientList
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceClientList struct {
	value *DeviceClientList
	isSet bool
}

func (v NullableDeviceClientList) Get() *DeviceClientList {
	return v.value
}

func (v *NullableDeviceClientList) Set(val *DeviceClientList) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceClientList) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceClientList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceClientList(val *DeviceClientList) *NullableDeviceClientList {
	return &NullableDeviceClientList{value: val, isSet: true}
}

func (v NullableDeviceClientList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceClientList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


